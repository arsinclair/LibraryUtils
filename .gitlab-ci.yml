stages:
    - mirror
    - build
    - cleanup
    - deploy

mirror:
    stage: mirror
    tags: ["linux-docker-build"]
    image: alpine:3.13.1
    before_script:
        - apk update && apk add -q --no-cache bash git openssh
        - git config --global user.name "${GITLAB_USER_NAME}"
        - git config --global user.email "${GITLAB_USER_EMAIL}"
    script:
        - mkdir ~/.ssh
        - printf "%s\n" "${GITHUB_DEPLOY_KEY}" > ~/.ssh/id_rsa
        - chmod 600 ~/.ssh/id_rsa
        - ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
        - git clone --bare ${CI_REPOSITORY_URL}
        - cd ${CI_PROJECT_NAME}.git
        - git push --mirror git@github.com:${GITHUB_REPO}.git

build:
    stage: build
    tags: ["windows-powershell-deploy"]
    rules:
        - if: '$CI_COMMIT_BRANCH == "master"'
    script:
        - dotnet publish --configuration Release --nologo --output ./PublishOutput
        - Compress-Archive -Path "PublishOutput\*" -DestinationPath Output.zip -CompressionLevel Optimal
    artifacts:
        paths:
            - Output.zip
        expire_in: 20 minutes

cleanup:
    stage: cleanup
    tags: ["windows-powershell-deploy"]
    dependencies: [] # Disable downloading artifacts for this job
    rules:
        - if: '$CI_COMMIT_BRANCH == "master"'
    script:
        - $existingApp = Get-WebApplication -Site "${IIS_PARENT_SITE}" -Name "${CI_PROJECT_TITLE}"
        - if($existingApp) { Remove-WebApplication -Site "${IIS_PARENT_SITE}" -Name "${CI_PROJECT_TITLE}" }
        - $existingPool = Get-IISAppPool "${CI_PROJECT_TITLE}"
        - if($existingPool) { Remove-WebAppPool "${CI_PROJECT_TITLE}" }
        - Reset-IISServerManager -Confirm:$false
        - if (Test-Path -Path "${DEPLOY_PATH}") { Remove-Item "${DEPLOY_PATH}\*" -Recurse -Force } else { Throw "INCORRECT FILE PATH " }

deploy:
    stage: deploy
    tags: ["windows-powershell-deploy"]
    rules:
        - if: '$CI_COMMIT_BRANCH == "master"'
    script:
        - Expand-Archive "Output.zip" -DestinationPath "${DEPLOY_PATH}"
        - $newPool = New-WebAppPool -Name "${CI_PROJECT_TITLE}" -Force
        - $newApp = New-WebApplication -Name "${CI_PROJECT_TITLE}" -Site "${IIS_PARENT_SITE}" -PhysicalPath "${DEPLOY_PATH}" -ApplicationPool $newPool.Name -Force
        - Reset-IISServerManager -Confirm:$false